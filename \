.486
model use16 small
.stack 100h
.data
		b dw 175

		k2 dw 150
		k1 dw 1 

    x dw ?
    y dw ?
    axis dw ? ;задаѐм ось

    ky dw 70
    kx dw 1 

    v_1 dw 1
    v_5 dw 5
    v_3 dw 3
    v_6 dw 6

    v_0d6 dd 0.6

    left_offst dw 319
    top_offst dw 174
    PI dw 180 ;задаѐм число пи в радианах

    temp dw ?
.code

ftransfer proc
	push ax
	push bx
	push cx
	push dx

	fldpi
	fmul
	fild pi
	fdiv
	fild k1
	fdiv

 	pop dx
 	pop cx
 	pop bx
 	pop ax
ftransfer endp

fprint_dot proc
	push ax
	push bx

	pop bx
	pop ax

	ret
fprint_dot endp

fexit proc
  mov ah, 8h
  int 21h
  mov ax, 4c00h
  int 21h
  ret
fexit endp

ffill_background proc
	push ax
	push bx
	push cx
	push dx


  mov ax, 0600h ; ah = 06 - прокрутка вверх
  mov bh, 15 ;белый
  mov cx, 0000b ; ah = 00 - строка верхнуго левого угла
  mov dx, 184Fh
  int 10h

  pop cx
  pop cx
  pop bx
  pop ax

  ret
ffill_background endp

fdraw_vertical_line proc
	push ax
	push bx
	push cx
	push dx

  mov ah, 0Ch ;установка графической точки
  mov al, 13 ;загружаем зелѐный цвет для
  ;вертикальной линии
  mov bh, 0h ;установка номера видеостраницы
  mov cx, 400 ;количество итераций сверху вниз
  ;для вертикальной линии
  @metka1: ;прорисовка вертикальной линии
  push cx
  mov axis, cx ;в начало оси записываем 0
  mov dx, axis ;установка курсора
  mov cx, left_offst ;вывод вертикальной оси, со
  ;сдвигом на 319 вправо
  int 10h
  pop cx ;400 итераций, ставит в 400
  ;колонку, и идѐт до 0
  loop @metka1

  pop dx
  pop cx
  pop bx
  pop ax
  ret
fdraw_vertical_line endp

fdraw_horizontal_line proc
	push ax
	push bx
	push cx
	push dx

  mov ah, 0ch ;установка графической точки
  mov al, 13 ;зелѐный цвет
  mov cx, 639 ;639 итераций, ставит в 639
  ;колонку, и идѐт до 0
  mov bh, 0h ;установка номера видеостраницы
  mov dx, top_offst ;ставит в 174 строку
  @metka2: ;цикл вывода горизонтальной оси
  int 10h ;вывод горизонтальной линии
  loop @metka2

  pop dx
  pop cx
  pop bx
  pop ax
  ret
fdraw_horizontal_line endp

fdraw_chart1 proc
	push ax
	push bx
	push cx
	push dx

  mov cx, -300 ;начинаем рассчитывать функцию
chart_loop1: 
  mov x, cx 

	fild x
	call ftransfer

	fild v_5
	fmul

	fild v_1
	fadd

	fild x
	call ftransfer

	fmul st(0), st(0)
	fild v_3
	fadd 
	fdiv

	fimul ky
	fchs
	frndint
	fistp y
  mov ah, 0Ch ;установка графической точки
  mov bh, 0h ;ставим в нулевое окно
  mov dx, y ;ставим в y строку
  add dx, top_offst
  mov al, 0 ;цвет черный
  push cx
  add cx, left_offst
  int 10h
  pop cx
  
  cmp cx, 0
  je finish_chart_loop1

	inc cx
  jmp chart_loop1 ;уменьшаем сx

finish_chart_loop1:
  pop dx
  pop cx
  pop bx
  pop ax
  ret
fdraw_chart1 endp

fdraw_chart2 proc
	push ax
	push bx
	push cx
	push dx

  mov cx, 0 ;начинаем рассчитывать функцию
chart_loop2: 
  mov x, cx 

	fild x
	call ftransfer
	fsin
	fmul st(0), st(0)

	fild v_5
	fild x
	call ftransfer
	fadd
	fsqrt

	fmul

	fimul ky
	fchs
	frndint
	fistp y
  mov ah, 0Ch ;установка графической точки
  mov bh, 0h ;ставим в нулевое окно
  mov dx, y ;ставим в y строку
  add dx, top_offst
  mov al, 0 ;цвет черный
  push cx
  add cx, left_offst
  int 10h
  pop cx
  
  cmp cx, 60
  je finish_chart_loop2

	inc cx
  jmp chart_loop2 ;уменьшаем сx

finish_chart_loop2:
  pop dx
  pop cx
  pop bx
  pop ax
  ret
fdraw_chart2 endp

fdraw_chart3 proc
	push ax
	push bx
	push cx
	push dx

  mov cx, 60 ;начинаем рассчитывать функцию
chart_loop3: 
  mov x, cx 

	fild x
	call ftransfer
	fild v_1
	fadd
	fsin

	fmul st(0), st(0)
	fmul st(0), st(0)

	fild x
	call ftransfer
	fild v_0d6
  fmul
  ; fldl2e
  ; fmul

 ;  fmul

	fimul ky
	fchs
	frndint
	fistp y
  mov ah, 0Ch ;установка графической точки
  mov bh, 0h ;ставим в нулевое окно
  mov dx, y ;ставим в y строку
  add dx, top_offst
  mov al, 0 ;цвет черный
  push cx
  add cx, left_offst
  int 10h
  pop cx
  
  cmp cx, 200 
  je finish_chart_loop3

	inc cx
  jmp chart_loop3 ;уменьшаем сx

finish_chart_loop3:
  pop dx
  pop cx
  pop bx
  pop ax
  ret
fdraw_chart3 endp

start:
    mov ax, @data
    mov ds, ax
    xor ax, ax

  	mov al, 10h
  	int 10h

    call ffill_background

    call fdraw_vertical_line

    call fdraw_horizontal_line

		call fdraw_chart1
		call fdraw_chart2
		call fdraw_chart3

    call fexit

end Start
end
